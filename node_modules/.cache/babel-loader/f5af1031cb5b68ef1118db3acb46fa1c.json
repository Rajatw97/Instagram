{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\insta-clone\\\\src\\\\components\\\\Post.js\";\nimport React, { useEffect } from 'react';\nimport '../css/Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { commentAction, singlecommentAction } from '../actions';\nimport { connect } from 'react-redux';\nimport { db } from '../firebaseConfig';\n\nfunction Post(props) {\n  useEffect(() => {\n    let unsubscribe;\n    const commentRef = db.collection('posts').doc(props.postId);\n    const shiftsRef = commentRef.collection('comments');\n\n    if (props.postId) {\n      unsubscribe = db.collection('posts').doc(props.postId).collection('comments').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          console.log(doc.id, \" => \", doc.data());\n        });\n      }).catch(error => {\n        setError(error);\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [props.postId]);\n\n  const postComment = event => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, props.username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: props.imageUrl,\n    alt: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 40\n    }\n  }, props.username, \" : \"), props.caption)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }\n  }, props.comments.comment.map(comm => /*#__PURE__*/React.createElement(\"p\", {\n    key: comm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, comm.username, \": \", comm.text))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment\",\n    value: props.comments.singlecomment,\n    onChange: e => props.singlecommentAction(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\",\n    disabled: !props.singlecomment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentAction,\n  singlecommentAction\n})(Post);","map":{"version":3,"sources":["D:/React/insta-clone/src/components/Post.js"],"names":["React","useEffect","Avatar","commentAction","singlecommentAction","connect","db","Post","props","unsubscribe","commentRef","collection","doc","postId","shiftsRef","get","then","querySnapshot","forEach","console","log","id","data","catch","error","setError","postComment","event","username","imageUrl","caption","comments","comment","map","comm","text","singlecomment","e","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../css/Post.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {commentAction,singlecommentAction} from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport {db} from '../firebaseConfig';\r\n\r\nfunction Post(props) {\r\n\r\n    useEffect(()=>{\r\n\r\n        let unsubscribe;\r\n        const commentRef = db.collection('posts').doc(props.postId);\r\n        const shiftsRef = commentRef.collection('comments');\r\n\r\n        if(props.postId)\r\n        {\r\n             unsubscribe=db.collection('posts').doc(props.postId).collection('comments').get()\r\n             .then(querySnapshot => {\r\n                querySnapshot.forEach(doc => {\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                });\r\n             })\r\n             .catch(error => {\r\n               setError(error);\r\n             });\r\n         \r\n        }\r\n\r\n        return  ()=>{\r\n            unsubscribe();\r\n        }\r\n    },[props.postId]);\r\n\r\n    const postComment=(event)=>{\r\n\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_header\">\r\n            <Avatar  className=\"post_avatar\" alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            <p>{props.username}</p> \r\n             </div>\r\n            \r\n         <img className=\"post_image\" src={props.imageUrl} alt=\"b\" />  \r\n         <h4 className=\"post_text\"><p ><strong>{props.username} : </strong>{props.caption}</p></h4>\r\n \r\n                 <div className=\"post_comments\">\r\n                     {  \r\n                         props.comments.comment.map((comm)=>(\r\n                            <p key={comm}>\r\n                            {comm.username}: {comm.text}\r\n                            </p>\r\n                         ))\r\n                        }\r\n                 </div>\r\n             \r\n             <form className=\"post_comment\">\r\n                <input\r\n                 className=\"post_input\"\r\n                 type=\"text\"\r\n                 placeholder=\"Add a comment\"\r\n                 value={props.comments.singlecomment}\r\n                 onChange={(e)=>props.singlecommentAction(e.target.value)}>\r\n                </input>\r\n                <button\r\n                className=\"post_button\"\r\n                disabled={!props.singlecomment}\r\n                type=\"submit\"\r\n                onClick={postComment}>\r\n                        Post\r\n                </button>\r\n             </form>\r\n             </div>      \r\n      \r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        comments:state\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{commentAction,singlecommentAction})(Post);\r\n"]},"metadata":{},"sourceType":"module"}