{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\insta-clone\\\\src\\\\components\\\\Post.js\";\nimport React, { useEffect } from 'react';\nimport '../css/Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { commentAction, singlecommentAction } from '../actions';\nimport { connect } from 'react-redux';\nimport { db } from '../firebaseConfig';\n\nfunction Post(props) {\n  useEffect(() => {\n    let unsubscribe;\n\n    if (props.postId) {\n      unsubscribe = db.collection('posts').doc(props.postId).collection('comments').get().then(snapshot => {\n        const arr = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          arr.push(data);\n        });\n        props.commentAction(arr);\n      }).catch(error => console.log(error)); //  unsubscribe=db.collection('posts').doc(props.postId).collection('comments').onSnapshot(snapshot=>{\n      //  props.commentAction(snapshot.docs.map(doc=>({\n      //     id:doc.id,\n      //     comment:doc.data()\n      //  })))\n      // });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [props.postId]);\n\n  const postComment = event => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, props.username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: props.imageUrl,\n    alt: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 40\n    }\n  }, props.username, \" : \"), props.caption)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }, console.log(props.comments.comment), props.comments.comment ? props.comments.comment.map(({\n    id,\n    comment\n  }) => /*#__PURE__*/React.createElement(\"p\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, comment.username, \": \", comment.text)) : console.log(\" unavailable\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment\",\n    value: props.comments.singlecomment,\n    onChange: e => props.singlecommentAction(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\",\n    disabled: !props.singlecomment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentAction,\n  singlecommentAction\n})(Post);","map":{"version":3,"sources":["D:/React/insta-clone/src/components/Post.js"],"names":["React","useEffect","Avatar","commentAction","singlecommentAction","connect","db","Post","props","unsubscribe","postId","collection","doc","get","then","snapshot","arr","forEach","data","push","catch","error","console","log","postComment","event","username","imageUrl","caption","comments","comment","map","id","text","singlecomment","e","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../css/Post.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {commentAction,singlecommentAction} from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport {db} from '../firebaseConfig';\r\n\r\nfunction Post(props) {\r\n\r\n    useEffect(()=>{\r\n\r\n        let unsubscribe;\r\n        if(props.postId)\r\n        {\r\n\r\n            unsubscribe=\r\n                db\r\n                .collection('posts').doc(props.postId).collection('comments').get()\r\n                .then(snapshot=>{\r\n                    const arr=[]\r\n                    snapshot.forEach(doc=>{\r\n                        const data=doc.data();\r\n                        arr.push(data);\r\n                    })\r\n                    props.commentAction(arr);\r\n                  })\r\n                  .catch(error=>console.log(error));\r\n            //  unsubscribe=db.collection('posts').doc(props.postId).collection('comments').onSnapshot(snapshot=>{\r\n            //  props.commentAction(snapshot.docs.map(doc=>({\r\n            //     id:doc.id,\r\n            //     comment:doc.data()\r\n            //  })))\r\n            // });\r\n        }\r\n           \r\n        \r\n        return  ()=>{\r\n            unsubscribe();\r\n        }\r\n },[props.postId]);\r\n\r\n    const postComment=(event)=>{\r\n\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_header\">\r\n            <Avatar  className=\"post_avatar\" alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            <p>{props.username}</p> \r\n             </div>\r\n            \r\n         <img className=\"post_image\" src={props.imageUrl} alt=\"b\" />  \r\n         <h4 className=\"post_text\"><p ><strong>{props.username} : </strong>{props.caption}</p></h4>\r\n \r\n                 <div className=\"post_comments\">\r\n                     {console.log(props.comments.comment)}\r\n                     {  props.comments.comment?(\r\n                         props.comments.comment.map(({id,comment})=>(\r\n                            <p key={id}>\r\n                            {comment.username}: {comment.text}\r\n                            </p>\r\n                         ))):console.log(\" unavailable\")\r\n                        }\r\n                 </div>\r\n             \r\n             <form className=\"post_comment\">\r\n                <input\r\n                 className=\"post_input\"\r\n                 type=\"text\"\r\n                 placeholder=\"Add a comment\"\r\n                 value={props.comments.singlecomment}\r\n                 onChange={(e)=>props.singlecommentAction(e.target.value)}>\r\n                </input>\r\n                <button\r\n                className=\"post_button\"\r\n                disabled={!props.singlecomment}\r\n                type=\"submit\"\r\n                onClick={postComment}>\r\n                        Post\r\n                </button>\r\n             </form>\r\n             </div>      \r\n      \r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        comments:state\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{commentAction,singlecommentAction})(Post);\r\n"]},"metadata":{},"sourceType":"module"}