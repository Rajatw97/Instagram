{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\insta-clone\\\\src\\\\components\\\\Post.js\";\nimport React, { useEffect } from 'react';\nimport '../css/Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { commentAction, singlecommentAction } from '../actions';\nimport { connect } from 'react-redux';\nimport { db } from '../firebaseConfig';\nimport Comment from './Comment';\n\nconst Post = props => {\n  const postid = props.postId;\n  const {\n    commentAction\n  } = props;\n  useEffect(() => {\n    console.log(props.comments.comment); // let unsubscribe;\n\n    if (postid) {\n      db.collection('posts').doc(postid).collection('comments').onSnapshot(snapshot => {\n        commentAction(snapshot.docs.map(doc => ({\n          id: doc.id,\n          comm: doc.data()\n        })));\n        console.log(\"After: \"); //  console.log(props.comments.comment);\n      });\n    } // return ()=>{\n    //     unsubscribe();\n    // }\n\n  }, [postid]);\n\n  const postComment = event => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, props.username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: props.imageUrl,\n    alt: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 43\n    }\n  }, props.username, \" : \"), props.caption)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, props.comments.comment.map(({\n    id,\n    comm\n  }) => /*#__PURE__*/React.createElement(Comment, {\n    id: id,\n    comment: comm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment\",\n    value: props.comments.singlecomment,\n    onChange: e => props.singlecommentAction(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\",\n    disabled: !props.singlecomment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    comments: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentAction,\n  singlecommentAction\n})(Post);","map":{"version":3,"sources":["D:/React/insta-clone/src/components/Post.js"],"names":["React","useEffect","Avatar","commentAction","singlecommentAction","connect","db","Comment","Post","props","postid","postId","console","log","comments","comment","collection","doc","onSnapshot","snapshot","docs","map","id","comm","data","postComment","event","username","imageUrl","caption","singlecomment","e","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../css/Post.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {commentAction,singlecommentAction} from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport {db} from '../firebaseConfig';\r\nimport Comment from './Comment';\r\n\r\nconst Post=(props)=> {\r\n\r\n    const postid=props.postId;\r\n    const {commentAction}=props;\r\n    useEffect(()=>{\r\n        console.log(props.comments.comment);\r\n        // let unsubscribe;\r\n        if(postid)\r\n        {\r\n            db\r\n             .collection('posts')\r\n             .doc(postid)\r\n             .collection('comments')\r\n             .onSnapshot(snapshot=>{\r\n             commentAction(snapshot.docs.map(doc=>({\r\n                id:doc.id,\r\n                comm:doc.data()})))\r\n             console.log(\"After: \");\r\n            //  console.log(props.comments.comment);\r\n\r\n             })\r\n            }       \r\n        \r\n        // return ()=>{\r\n        //     unsubscribe();\r\n        // }\r\n },[postid]);\r\n\r\n    const postComment=(event)=>{\r\n\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_header\">\r\n                <Avatar  className=\"post_avatar\" alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                <p>{props.username}</p> \r\n            </div>\r\n            <img className=\"post_image\" src={props.imageUrl} alt=\"b\" />  \r\n            <h4 className=\"post_text\"><p ><strong>{props.username} : </strong>{props.caption}</p></h4>\r\n \r\n               <div className=\"post_comments\">\r\n                 {   props.comments.comment.map(({id, comm})=> (<Comment id={id} comment={comm} />)\r\n                  )} \r\n                </div>\r\n            \r\n             \r\n            <form className=\"post_comment\">\r\n                <input\r\n                 className=\"post_input\"\r\n                 type=\"text\"\r\n                 placeholder=\"Add a comment\"\r\n                 value={props.comments.singlecomment}\r\n                 onChange={(e)=>props.singlecommentAction(e.target.value)}>\r\n                </input>\r\n                <button\r\n                className=\"post_button\"\r\n                disabled={!props.singlecomment}\r\n                type=\"submit\"\r\n                onClick={postComment}>\r\n                        Post\r\n                </button>\r\n             </form>\r\n             </div>      \r\n      \r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        comments:state\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{commentAction,singlecommentAction})(Post);\r\n"]},"metadata":{},"sourceType":"module"}