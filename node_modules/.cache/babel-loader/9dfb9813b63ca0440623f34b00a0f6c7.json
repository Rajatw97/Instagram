{"ast":null,"code":"// import { Button,Badge } from '@material-ui/core';\n// import React,{useEffect,useState} from 'react';\n// import history from '../History';\n// import '../css/Userprofile.css';\n// import {connect} from 'react-redux';\n// import {userprofileAction,userAction,userimgAction} from '../actions';\n// import {db,auth,storage} from '../firebaseConfig';\n// import {Avatar} from '@material-ui/core';\n// const Userprofile=(props)=>{\n//   const [value, setValue] = useState(0);\n//   useEffect(()=>{\n//          auth.onAuthStateChanged(authUser=>{\n//             if(authUser){\n//               console.log(authUser);\n//               props.userAction(authUser);\n//              }\n//             else{\n//               props.userAction(null);\n//             }\n//           })\n//             if(props.users.user){\n//             db.collection('users').doc(props.users.user.uid).onSnapshot(snapshot=>{\n//             //    console.log(snapshot.data())\n//                  props.userprofileAction(snapshot.data());\n//                        })\n//                     }\n//             },[props.users.user])\n//             const hiddenFileInput = React.useRef(null);\n//             const handleChange=e=>{\n//               if(e.target.files[0]){\n//                 console.log(\"change\"+e.target.files[0])\n//                 props.userimgAction(e.target.files[0]);\n//               }\n//           };\n//             const imgUpld= e=>{\n//               hiddenFileInput.current.click();\n//               console.log(\"userimg: \",props.users.userimg);\n//               setValue(1);\n//               if(props.users.userimg){\n//                 console.log(\"inside if\");\n//                 const uploadTask= storage.ref(`images/${props.users.user.uid}`).put(props.users.userimg);\n//                 uploadTask.on('state_changed',\n//                 ()=>{\n//                 storage\n//                 .ref(\"/images\")\n//                 .child(props.users.user.uid)\n//                 .getDownloadURL()\n//                 .then(url=>{\n//                     db.collection(\"users\").doc(props.users.user.uid).update(\n//                     {\n//                    imageUrl:url\n//                      });\n//                     });\n//             });\n//             }    \n//         }\n//     return(<div>\n//        <Button  className=\"back_btn\" style={{marginTop:'-45px'}} type=\"submit\" onClick={()=>history.push(\"/\")}>Back</Button>\n//        <div className=\"user_info\">\n//            <div className=\"user_img\">\n//             {/* username below image */}\n//             <Avatar alt=\"Remy Sharp\"  src={props.users.userprofile.imageUrl} sizes=\"large\" />\n//            <input className=\"iuitem\" id=\"file\" type=\"file\"  ref={hiddenFileInput} onChange={handleChange} style={{display:\"none\"}} ></input> \n//            <button className=\"fas fa-user-edit edit_icon\" onClick={imgUpld} ></button>\n//             <p className=\"img_uname\">Rajat</p>\n//            </div>\n//            <div className=\"user_follow\">\n//                {/* followers,following, button & no of foll */}\n//            </div>\n//            <div className=\"user_bio\">\n//                {/* bio,edit bio option too */}\n//            </div>\n//         <div><strong>{props.users.userprofile.bio}</strong> : {props.users.userprofile.followers} : {props.users.userprofile.following}</div>\n//         </div>\n//         </div>);\n// }\n// const mapStateToProps=(state)=>{\n//     return {users:state}\n// }\n// export default connect(mapStateToProps,{userprofileAction,userAction,userimgAction}) (Userprofile);","map":{"version":3,"sources":["D:/Instagram/src/components/Userprofile.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import { Button,Badge } from '@material-ui/core';\r\n// import React,{useEffect,useState} from 'react';\r\n\r\n// import history from '../History';\r\n// import '../css/Userprofile.css';\r\n// import {connect} from 'react-redux';\r\n// import {userprofileAction,userAction,userimgAction} from '../actions';\r\n// import {db,auth,storage} from '../firebaseConfig';\r\n// import {Avatar} from '@material-ui/core';\r\n\r\n// const Userprofile=(props)=>{\r\n\r\n//   const [value, setValue] = useState(0);\r\n\r\n//   useEffect(()=>{\r\n\r\n//          auth.onAuthStateChanged(authUser=>{\r\n//             if(authUser){\r\n//               console.log(authUser);\r\n//               props.userAction(authUser);\r\n\r\n//              }\r\n//             else{\r\n//               props.userAction(null);\r\n//             }\r\n//           })\r\n//             if(props.users.user){\r\n//             db.collection('users').doc(props.users.user.uid).onSnapshot(snapshot=>{\r\n//             //    console.log(snapshot.data())\r\n//                  props.userprofileAction(snapshot.data());\r\n//                        })\r\n//                     }\r\n                \r\n//             },[props.users.user])\r\n\r\n//             const hiddenFileInput = React.useRef(null);\r\n            \r\n            \r\n//             const handleChange=e=>{\r\n//               if(e.target.files[0]){\r\n//                 console.log(\"change\"+e.target.files[0])\r\n//                 props.userimgAction(e.target.files[0]);\r\n//               }\r\n             \r\n//           };\r\n//             const imgUpld= e=>{\r\n//               hiddenFileInput.current.click();\r\n//               console.log(\"userimg: \",props.users.userimg);\r\n//               setValue(1);\r\n//               if(props.users.userimg){\r\n//                 console.log(\"inside if\");\r\n//                 const uploadTask= storage.ref(`images/${props.users.user.uid}`).put(props.users.userimg);\r\n//                 uploadTask.on('state_changed',\r\n//                 ()=>{\r\n//                 storage\r\n//                 .ref(\"/images\")\r\n//                 .child(props.users.user.uid)\r\n//                 .getDownloadURL()\r\n//                 .then(url=>{\r\n//                     db.collection(\"users\").doc(props.users.user.uid).update(\r\n//                     {\r\n//                    imageUrl:url\r\n//                      });\r\n//                     });\r\n//             });\r\n//             }    \r\n\r\n//         }\r\n\r\n        \r\n//     return(<div>\r\n//        <Button  className=\"back_btn\" style={{marginTop:'-45px'}} type=\"submit\" onClick={()=>history.push(\"/\")}>Back</Button>\r\n//        <div className=\"user_info\">\r\n//            <div className=\"user_img\">\r\n               \r\n//             {/* username below image */}\r\n           \r\n//             <Avatar alt=\"Remy Sharp\"  src={props.users.userprofile.imageUrl} sizes=\"large\" />\r\n//            <input className=\"iuitem\" id=\"file\" type=\"file\"  ref={hiddenFileInput} onChange={handleChange} style={{display:\"none\"}} ></input> \r\n//            <button className=\"fas fa-user-edit edit_icon\" onClick={imgUpld} ></button>\r\n//             <p className=\"img_uname\">Rajat</p>\r\n//            </div>\r\n//            <div className=\"user_follow\">\r\n//                {/* followers,following, button & no of foll */}\r\n//            </div>\r\n//            <div className=\"user_bio\">\r\n//                {/* bio,edit bio option too */}\r\n//            </div>\r\n\r\n\r\n//         <div><strong>{props.users.userprofile.bio}</strong> : {props.users.userprofile.followers} : {props.users.userprofile.following}</div>\r\n//         </div>\r\n//         </div>);\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {users:state}\r\n// }\r\n\r\n// export default connect(mapStateToProps,{userprofileAction,userAction,userimgAction}) (Userprofile);"]},"metadata":{},"sourceType":"module"}