{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\insta-clone\\\\src\\\\components\\\\ModalBody.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Input } from '@material-ui/core';\nimport '../css/App.css';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default (props => {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form_singup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"app_headerImage\",\n    src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n    alt: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), props.type === \"signup\" ? /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"username\",\n    type: \"text\",\n    value: props.username,\n    onChange: e => props.setusername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }) : console.log(\"Sign up form\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"email\",\n    type: \"text\",\n    value: props.email,\n    onChange: e => props.setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), console.log(props.username), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"password\",\n    type: \"text\",\n    value: props.password,\n    onChange: e => props.setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), console.log(props.username), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: (props, event) => props.Click(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.text)));\n});","map":{"version":3,"sources":["D:/React/insta-clone/src/components/ModalBody.js"],"names":["React","useState","useEffect","makeStyles","Button","Input","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","props","classes","modalStyle","type","username","e","setusername","target","value","console","log","email","setEmail","password","setPassword","event","Click","text"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport '../css/App.css';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  }\r\n  \r\n  function getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  \r\n  \r\n\r\nexport default (props)=>{\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n\r\nreturn(\r\n        <div style={modalStyle} className={classes.paper}>\r\n        <form className=\"form_singup\">\r\n        <center>\r\n        <img className=\"app_headerImage\"\r\n                    src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\r\n                    alt=\"a\" />\r\n        </center>    \r\n        {\r\n            props.type===\"signup\"?\r\n              <Input \r\n              placeholder=\"username\"\r\n              type=\"text\"\r\n              value={props.username}\r\n              onChange={(e)=>props.setusername(e.target.value)}  />:console.log(\"Sign up form\")\r\n        }\r\n         \r\n        <Input \r\n            placeholder=\"email\"\r\n            type=\"text\"\r\n            value={props.email}\r\n            onChange={(e)=>props.setEmail(e.target.value)}  />   \r\n            {console.log(props.username)}    \r\n        <Input \r\n            placeholder=\"password\"\r\n            type=\"text\"\r\n            value={props.password}\r\n            onChange={(e)=>props.setPassword(e.target.value)}  />   \r\n            {console.log(props.username)}\r\n        <Button type=\"submit\" onClick={(props,event)=>props.Click(event)} >{props.text}</Button>\r\n        </form>\r\n        </div>\r\n      );\r\n\r\n};"]},"metadata":{},"sourceType":"module"}