{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\insta-clone\\\\src\\\\components\\\\ImageUpload.js\";\nimport { Button } from '@material-ui/core';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { postAction, progressAction, imageAction } from '../actions';\nimport { db, storage } from '../firebaseConfig';\n\nconst ImageUpload = props => {\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      props.imageAction(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${props.posts.image.name}`).put(props.posts.image);\n    uploadTask.on('state_changed', snapshot => {\n      //progress bar logic\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      props.progressAction(progress);\n    }, error => {\n      alert.message(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter a caption\",\n    value: props.posts.caption,\n    onChange: event => props.postAction(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \" Upload \"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postAction,\n  progressAction,\n  imageAction\n})(ImageUpload);","map":{"version":3,"sources":["D:/React/insta-clone/src/components/ImageUpload.js"],"names":["Button","React","connect","postAction","progressAction","imageAction","db","storage","ImageUpload","props","handleChange","e","target","files","handleUpload","uploadTask","ref","posts","image","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","alert","message","caption","event","value","mapStateToProps","state"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAmBC,cAAnB,EAAkCC,WAAlC,QAAoD,YAApD;AACA,SAAQC,EAAR,EAAWC,OAAX,QAAyB,mBAAzB;;AAEA,MAAMC,WAAW,GAAEC,KAAD,IAAS;AAEvB,QAAMC,YAAY,GAACC,CAAC,IAAE;AAClB,QAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAH,EAAqB;AACjBJ,MAAAA,KAAK,CAACJ,WAAN,CAAkBM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;AACH;AACJ,GAJD;;AAMA,QAAMC,YAAY,GAAC,MAAI;AAEnB,UAAMC,UAAU,GAACR,OAAO,CAACS,GAAR,CAAa,UAASP,KAAK,CAACQ,KAAN,CAAYC,KAAZ,CAAkBC,IAAK,EAA7C,EAAgDC,GAAhD,CAAoDX,KAAK,CAACQ,KAAN,CAAYC,KAAhE,CAAjB;AAEAH,IAAAA,UAAU,CAACM,EAAX,CAAc,eAAd,EACCC,QAAD,IAAY;AACR;AACA,YAAMC,QAAQ,GAACC,IAAI,CAACC,KAAL,CAAYH,QAAQ,CAACI,gBAAT,GAA0BJ,QAAQ,CAACK,UAApC,GAAgD,GAA3D,CAAf;AACAlB,MAAAA,KAAK,CAACL,cAAN,CAAqBmB,QAArB;AACH,KALD,EAMCK,KAAD,IAAS;AAACC,MAAAA,KAAK,CAACC,OAAN,CAAcF,KAAd;AACT,KAPD;AAQH,GAZD;;AAaA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,iBAA/B;AAAiD,IAAA,KAAK,EAAEnB,KAAK,CAACQ,KAAN,CAAYc,OAApE;AAA6E,IAAA,QAAQ,EAAEC,KAAK,IAAEvB,KAAK,CAACN,UAAN,CAAiB6B,KAAK,CAACpB,MAAN,CAAaqB,KAA9B,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEvB,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADA;AAQH,CA7BD;;AA+BA,MAAMoB,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAO;AAAElB,IAAAA,KAAK,EAACkB;AAAR,GAAP;AACH,CAFD;;AAIA,eAAejC,OAAO,CAACgC,eAAD,EAAiB;AAAC/B,EAAAA,UAAD;AAAYC,EAAAA,cAAZ;AAA2BC,EAAAA;AAA3B,CAAjB,CAAP,CAAkEG,WAAlE,CAAf","sourcesContent":["import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {postAction,progressAction,imageAction} from '../actions';\r\nimport {db,storage} from '../firebaseConfig';\r\n\r\nconst ImageUpload=(props)=>{\r\n\r\n    const handleChange=e=>{\r\n        if(e.target.files[0]){\r\n            props.imageAction(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload=()=>{\r\n\r\n        const uploadTask=storage.ref(`images/${props.posts.image.name}`).put(props.posts.image);\r\n\r\n        uploadTask.on('state_changed',\r\n        (snapshot)=>{\r\n            //progress bar logic\r\n            const progress=Math.round((snapshot.bytesTransferred/snapshot.totalBytes)*100);\r\n            props.progressAction(progress);\r\n        },\r\n        (error)=>{alert.message(error);\r\n        })\r\n    };\r\n    return(\r\n    <div>\r\n        <input type=\"text\" placeholder=\"Enter a caption\" value={props.posts.caption} onChange={event=>props.postAction(event.target.value)}/>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button onClick={handleUpload} > Upload </Button>\r\n\r\n    </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return { posts:state}\r\n}\r\n\r\nexport default connect(mapStateToProps,{postAction,progressAction,imageAction}) (ImageUpload);"]},"metadata":{},"sourceType":"module"}