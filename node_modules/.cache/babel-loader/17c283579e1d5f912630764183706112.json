{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\insta-clone\\\\src\\\\components\\\\Post.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../css/Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { commentAction, singlecommentAction, likeAction } from '../actions';\nimport { connect } from 'react-redux';\nimport { db } from '../firebaseConfig';\nimport firebase from 'firebase';\n\nconst Post = props => {\n  const [commentsnew, setcommentsnew] = useState([]);\n  const postid = props.postId;\n  let unsubscribe;\n  useEffect(() => {\n    if (postid) {\n      unsubscribe = db.collection('posts').doc(postid).collection('comments').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        //  props.commentAction(snapshot.docs.map(doc=>({\n        //     id:doc.id,\n        //     comm:doc.data()})))\n        //  })\n        setcommentsnew(snapshot.docs.map(doc => ({\n          id: doc.id,\n          comm: doc.data()\n        })));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postid]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection('posts').doc(props.postId).add({\n      text: props.comments.singlecomment,\n      username: props.loggedinUser.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    props.singlecommentAction('');\n  };\n\n  const likeFunctionaity = event => {\n    console.log(\"button clicked\");\n    console.log(props.comments.like);\n    props.likeAction(props.comments.like + 1);\n    event.preventDefault();\n    db.collection('posts').doc(props.postId).update({\n      like: props.comments.like\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, props.username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: props.imageUrl,\n    alt: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-heart fa-lg like_icon\",\n    onClick: likeFunctionaity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \" \", props.comments.like, \" likes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 44\n    }\n  }, props.username, \" : \"), \" \", props.caption)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_cmnt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, commentsnew && commentsnew.map(({\n    id,\n    comm\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }\n    }, comm.username), \" : \", comm.text);\n  })), props.loggedinUser && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment\",\n    value: props.comments.singlecomment,\n    onChange: e => props.singlecommentAction(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\" // disabled={!props.singlecomment}\n    ,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \"Post\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    comments: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentAction,\n  singlecommentAction,\n  likeAction\n})(Post);","map":{"version":3,"sources":["D:/React/insta-clone/src/components/Post.js"],"names":["React","useEffect","useState","Avatar","commentAction","singlecommentAction","likeAction","connect","db","firebase","Post","props","commentsnew","setcommentsnew","postid","postId","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","comm","data","postComment","event","preventDefault","add","text","comments","singlecomment","username","loggedinUser","displayName","timestamp","firestore","FieldValue","serverTimestamp","likeFunctionaity","console","log","like","update","imageUrl","caption","e","target","value","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,aAAR,EAAsBC,mBAAtB,EAA0CC,UAA1C,QAA2D,YAA3D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,EAAR,QAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,IAAI,GAAEC,KAAD,IAAU;AAEjB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BX,QAAQ,CAAC,EAAD,CAA3C;AAEA,QAAMY,MAAM,GAACH,KAAK,CAACI,MAAnB;AACA,MAAIC,WAAJ;AACAf,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGa,MAAH,EACA;AACGE,MAAAA,WAAW,GAACR,EAAE,CACXS,UADS,CACE,OADF,EAETC,GAFS,CAELJ,MAFK,EAGTG,UAHS,CAGE,UAHF,EAITE,OAJS,CAID,WAJC,EAIW,MAJX,EAKTC,UALS,CAKEC,QAAQ,IAAE;AACvB;AACA;AACA;AACA;AACAR,QAAAA,cAAc,CAACQ,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBL,GAAG,KAAG;AAC/BM,UAAAA,EAAE,EAACN,GAAG,CAACM,EADwB;AAE9BC,UAAAA,IAAI,EAACP,GAAG,CAACQ,IAAJ;AAFyB,SAAH,CAArB,CAAD,CAAd;AAGO,OAbI,CAAZ;AAcE;;AAEL,WAAO,MAAI;AACPV,MAAAA,WAAW;AACd,KAFD;AAGN,GAtBW,EAsBV,CAACF,MAAD,CAtBU,CAAT;;AAwBA,QAAMa,WAAW,GAAEC,KAAD,IAAS;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACArB,IAAAA,EAAE,CACDS,UADD,CACY,OADZ,EAECC,GAFD,CAEKP,KAAK,CAACI,MAFX,EAGCe,GAHD,CAGK;AACDC,MAAAA,IAAI,EAACpB,KAAK,CAACqB,QAAN,CAAeC,aADnB;AAEDC,MAAAA,QAAQ,EAACvB,KAAK,CAACwB,YAAN,CAAmBC,WAF3B;AAGDC,MAAAA,SAAS,EAAC5B,QAAQ,CAAC6B,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAHT,KAHL;AAQA7B,IAAAA,KAAK,CAACN,mBAAN,CAA0B,EAA1B;AAEH,GAZD;;AAcA,QAAMoC,gBAAgB,GAAEb,KAAD,IAAS;AAC5Bc,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYhC,KAAK,CAACqB,QAAN,CAAeY,IAA3B;AACAjC,IAAAA,KAAK,CAACL,UAAN,CAAiBK,KAAK,CAACqB,QAAN,CAAeY,IAAf,GAAoB,CAArC;AACAhB,IAAAA,KAAK,CAACC,cAAN;AACArB,IAAAA,EAAE,CACDS,UADD,CACY,OADZ,EAECC,GAFD,CAEKP,KAAK,CAACI,MAFX,EAGC8B,MAHD,CAGQ;AACJD,MAAAA,IAAI,EAACjC,KAAK,CAACqB,QAAN,CAAeY;AADhB,KAHR;AAMH,GAXD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAiC,IAAA,GAAG,EAAC,YAArC;AAAkD,IAAA,GAAG,EAAC,6BAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjC,KAAK,CAACuB,QAAV,CAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEvB,KAAK,CAACmC,QAAvC;AAAiD,IAAA,GAAG,EAAC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAG,IAAA,SAAS,EAAC,8BAAb;AAA4C,IAAA,OAAO,EAAEL,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyE9B,KAAK,CAACqB,QAAN,CAAeY,IAAxF,WANJ,eAOI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASjC,KAAK,CAACuB,QAAf,QAAJ,OAA0CvB,KAAK,CAACoC,OAAhD,CAA3B,CAPJ,eASO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMnC,WAAW,IAAIA,WAAW,CAACW,GAAZ,CAAgB,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAD,KAAc;AAChD,wBAAO;AAAK,MAAA,GAAG,EAAED,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASC,IAAI,CAACS,QAAd,CAAd,SAAkDT,IAAI,CAACM,IAAvD,CAAP;AACI,GAFc,CADrB,CATP,EAeMpB,KAAK,CAACwB,YAAN,iBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACC,IAAA,SAAS,EAAC,YADX;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,eAHb;AAIC,IAAA,KAAK,EAAExB,KAAK,CAACqB,QAAN,CAAeC,aAJvB;AAKC,IAAA,QAAQ,EAAGe,CAAD,IAAKrC,KAAK,CAACN,mBAAN,CAA0B2C,CAAC,CAACC,MAAF,CAASC,KAAnC,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAQA;AACA,IAAA,SAAS,EAAC,aADV,CAEA;AAFA;AAGA,IAAA,IAAI,EAAC,QAHL;AAIA,IAAA,OAAO,EAAEvB,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA,CAhBV,CADJ;AAwCH,CAhGD;;AAiGA,MAAMwB,eAAe,GAACC,KAAK,IAAE;AACzB,SAAO;AACHpB,IAAAA,QAAQ,EAACoB;AADN,GAAP;AAGH,CAJD;;AAMA,eAAe7C,OAAO,CAAC4C,eAAD,EAAiB;AAAC/C,EAAAA,aAAD;AAAeC,EAAAA,mBAAf;AAAmCC,EAAAA;AAAnC,CAAjB,CAAP,CAAwEI,IAAxE,CAAf","sourcesContent":["import React, { useEffect , useState} from 'react';\r\nimport '../css/Post.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {commentAction,singlecommentAction,likeAction} from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport {db} from '../firebaseConfig';\r\nimport firebase from 'firebase';\r\n\r\nconst Post=(props)=> {\r\n\r\n    const [commentsnew,setcommentsnew]=useState([]);\r\n\r\n    const postid=props.postId;\r\n    let unsubscribe;\r\n    useEffect(()=>{\r\n        if(postid)\r\n        {\r\n           unsubscribe=db\r\n             .collection('posts')\r\n             .doc(postid)\r\n             .collection('comments')\r\n             .orderBy('timestamp','desc')\r\n             .onSnapshot(snapshot=>{\r\n            //  props.commentAction(snapshot.docs.map(doc=>({\r\n            //     id:doc.id,\r\n            //     comm:doc.data()})))\r\n            //  })\r\n            setcommentsnew(snapshot.docs.map(doc=>({\r\n                    id:doc.id,\r\n                     comm:doc.data()})))\r\n                  })\r\n            }       \r\n        \r\n        return ()=>{\r\n            unsubscribe();\r\n        }\r\n },[postid]);\r\n\r\n    const postComment=(event)=>{\r\n        event.preventDefault();\r\n        db\r\n        .collection('posts')\r\n        .doc(props.postId)\r\n        .add({\r\n            text:props.comments.singlecomment,\r\n            username:props.loggedinUser.displayName,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        props.singlecommentAction('');\r\n\r\n    }\r\n\r\n    const likeFunctionaity=(event)=>{\r\n        console.log(\"button clicked\");\r\n        console.log(props.comments.like);\r\n        props.likeAction(props.comments.like+1);\r\n        event.preventDefault();\r\n        db\r\n        .collection('posts')\r\n        .doc(props.postId)\r\n        .update({\r\n            like:props.comments.like\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_header\">\r\n                <Avatar  className=\"post_avatar\" alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                <p>{props.username}</p> \r\n            </div>\r\n            <img className=\"post_image\" src={props.imageUrl} alt=\"b\" />  \r\n            <i className=\"far fa-heart fa-lg like_icon\" onClick={likeFunctionaity}> {props.comments.like} likes</i>\r\n            <div className=\"post_text\"><p ><strong>{props.username} : </strong> {props.caption}</p></div>\r\n            \r\n               <div className=\"post_cmnt\">\r\n                    {commentsnew && commentsnew.map(({id, comm})=>{ \r\n                  return <div key={id}><strong>{comm.username}</strong> : {comm.text}</div>\r\n                     }) }\r\n                </div>\r\n            \r\n             {props.loggedinUser &&(\r\n                  <form className=\"post_comment\">\r\n                  <input\r\n                   className=\"post_input\"\r\n                   type=\"text\"\r\n                   placeholder=\"Add a comment\"\r\n                   value={props.comments.singlecomment}\r\n                   onChange={(e)=>props.singlecommentAction(e.target.value)}>\r\n                  </input>\r\n                  <button\r\n                  className=\"post_button\"\r\n                  // disabled={!props.singlecomment}\r\n                  type=\"submit\"\r\n                  onClick={postComment}>\r\n\r\n\r\n                          Post\r\n                  </button>\r\n               </form>\r\n             )}\r\n           \r\n             </div>      \r\n        \r\n    )\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        comments:state\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{commentAction,singlecommentAction,likeAction})(Post);\r\n"]},"metadata":{},"sourceType":"module"}